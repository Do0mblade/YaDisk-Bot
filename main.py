
# imports

from config.bot import TOKEN
from defs.db import Database
import defs.markups as nav
from defs.translation import _
from defs.yandex import Yandex_Disc, loop_in_thread

from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
from aiogram.types import InputFile

from threading import Thread

import asyncio

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

db = Database()
yd = Yandex_Disc()

async def on_startup(dp): # –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
    print('Database:\n', await db.db())
    loop = asyncio.get_event_loop() # —Å–æ–∑–¥–∞—ë–º loop event
    t = Thread(target=loop_in_thread, args=(loop,)) # —Å–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –≤ –¥—Ä—É–≥–æ–º –ø–æ—Ç–æ–∫–µ
    t.start() # –∑–∞–ø—É—Å–∫–∞–µ–º

# –∫–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands = ['start'])
async def start(message: types.Message): # /start - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    if not await db.user_exists(message.from_user.id): # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —á–µ–ª–æ–≤–µ–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        start_command = message.text
        refferer_id = str(start_command[7:]) # –¥–µ–ª–∞–µ–º —Å—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—ã, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è id –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await bot.send_message(message.from_user.id, '‚ôªÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫', reply_markup=nav.choose_lang(refferer_id)) # –ø—Ä–æ—Å–∏–º –≤—ã–±—Ä–∞—Ç—å —è–∑—ã–∫
    else: # –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –µ—Å—Ç—å –≤ –±–¥, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç
        lang = (await db.get_lang(message.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.answer('‚úÖ '+_('–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!', lang), reply_markup=nav.MainMenu(lang)) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∏ –≤—ã–≤–æ–¥–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é

@dp.message_handler(commands=['profile', 'me', '–ø—Ä–æ—Ñ–∏–ª—å'])
async def user_profile(message: types.Message): # /profile - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —á–µ–ª–æ–≤–µ–∫–∞.
    if await db.user_exists(message.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥
        user = await db.user_info(message.from_user.id) # –¥–æ—Å—Ç–∞—ë–º –≤—Å—é –∏–Ω—Ñ—É –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        lang = user[3] # –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        if user[2] is None: # –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª
            ref = ""
        else: # –µ—Å–ª–∏ –µ—Å—Ç—å, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å—Ç—Ä–æ–∫—É
            ref_username = await db.get_refferer_username(user[2])
            ref = f"üé´ <i>{_('–í–∞—Å –ø—Ä–∏–≥–ª–æ—Å–∏–ª', lang)}</i>: <b>@{ref_username[0]}</b>"

        if user[4] is None: # –µ—Å–ª–∏ –Ω–µ—Ç —Å—Ç–∞—Ç—É—Å–∞, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –æ–± —ç—Ç–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ —Å—Ç–∞–≤–∏–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –ø—É—Å—Ç—ã–º–∏
            stat = '‚ôªÔ∏è ' + _('–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Å—Ç–∞—Ç—É—Å –Ω–∏–∂–µ', lang)
            ref_url = ""
            yat = ""
            reffs = ""
        elif user[4] == '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä': # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä
            me = await bot.get_me() # –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ—É –æ –±–æ—Ç–µ
            stat = f"‚öúÔ∏è {_('–í–∞—à —Å—Ç–∞—Ç—É—Å', lang)}: <b><u>{_(user[4], lang)}</u></b>" # –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ —Å—Ç—Ä–æ–∫—É
            ref_url = f"\n‚úâÔ∏è <i>{_('–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞', lang)}</i>: \n<code><b>https://t.me/{me.username}?start={message.from_user.id}</b></code>" # –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –≤ —Å—Ç—Ä–æ–∫—É
            reffers = await db.get_referers(message.from_user.id) # –ø–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            reffs = f"\nüë• <i>{_('–í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã', lang)}</i>: {reffers}" # –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫—É
            if user[5] is None: # –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞, —Ç–æ –ø—Ä–æ—Å–∏–º –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
                yat = f"<b>\nüìÉ {_('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ /token, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é —Ç–æ–∫–µ–Ω–∞.', lang)}</b>"
            else: # –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ —Å—Ç—Ä–æ–∫—É
                yat = f"<i>\nüîë {_('–í–∞—à —Ç–æ–∫–µ–Ω –Ø–Ω–¥–µ–∫—Å', lang)}</i>: <code>{user[5]}</code>"
        else: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Å—Ç–∞—Ç—É—Å –≤ —Å—Ç—Ä–æ–∫—É –∏ –æ—Å—Ç–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –ø—É—Å—Ç—ã–º–∏
            stat = f"üÉè <i>{_('–í–∞—à —Å—Ç–∞—Ç—É—Å', lang)}</i>: <b><u>{_(user[4], lang)}</u></b>"
            ref_url = ""
            yat = ""
            reffs = ""


        text = f"""
üë§ <i>{_('–í–∞—à–µ –∏–º—è', lang)}</i>: <b>{message.from_user.full_name}</b>
{ref}
{stat}
{reffs}
{ref_url}
{yat}
    """ # —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        await message.answer(text, reply_markup=nav.chooseStatus(user[4], lang), parse_mode='HTML') # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    else:
        await message.answer('üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start') # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ—Å–∏–º –µ–≥–æ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å

@dp.message_handler(commands=['add_folder'])
async def add_folder(message: types.Message): # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–∫–∏ –ø–∞–∫–∏ –≤ –±–¥
    if await db.user_exists(message.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        lang = (await db.get_lang(message.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (await db.get_status(message.from_user.id))[0] == '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä': # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—É—Å
            token = (await db.get_yatoken(message.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
            if token is None: # –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç, —Ç–æ –ø—Ä–æ—Å–∏–º –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å
                await message.reply('‚ùå '+_('–î–ª—è –Ω–∞—á–∞–ª–∞ –≤–∞—à –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ –±–æ—Ç–∞ —Ç–æ–∫–µ–Ω!\n\n–î–ª—è —ç—Ç–æ–≥–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /token', lang))
            else: # –∏–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
                if await yd.check_token(token): # –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω, –∏–¥—ë–º –¥–∞–ª—å—à–µ
                    data = message.text # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                    dt = data.split() # —Ä–∞–∑–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    if len(dt) == 1: # –µ—Å–ª–∏ –Ω–µ—Ç –ø—É—Ç–∏ –∫ –ø–∞–ø–∫–µ, —Ç–æ –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
                        await help(message)
                    else: # –∏–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
                        path_folder = data[12:] # –¥–µ–ª–∞–µ–º —Å—Ä–µ–∑, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ
                        if path_folder[-1] == '/': # –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–æ–π –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª
                            pass
                        else: # –µ—Å–ª–∏ –Ω–µ /, —Ç–æ —Å—Ç–∞–≤–∏–º
                            path_folder = path_folder + '/'
                        check_folder = await db.select_folders(message.from_user.id) # –¥–æ—Å—Ç–∞—ë–º –≤—Å–µ –ø–∞–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        yatoken = (await db.get_yatoken(message.from_user.id))[0] # –¥–æ—Å—Ç–∞—ë–º –Ø–Ω–¥–µ–∫—Å —Ç–æ–∫–µ–Ω
                        if check_folder is None: # –µ—Å–ª–∏ –ø–∞–ø–æ–∫ –Ω–µ—Ç, —Ç–æ –∏–¥—ë–º –¥–∞–ª—å—à–µ
                            if await yd.check_folder(path_folder, yatoken): # –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ø–∞–ø–∫–∏
                                try:
                                    await db.insert_YaFolder(message.from_user.id, yatoken, path_folder) # –¥–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É –≤ –±–¥
                                    await message.answer('‚úÖ '+_('–ü—É—Ç—å –∫ –≤–∞—à–µ–π –ø–∞–ø–∫–µ <b><code>{}</code></b> –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!', lang).format(path_folder),
                                                         parse_mode='HTML') # –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                                except KeyError: # –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞, —Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ—ë
                                    await message.answer('‚ùå '+_('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, –µ—Å–ª–∏ —Ç–∞–∫–æ–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.', lang))
                                    await message.answer(f'{KeyError}')
                            else: # –∏–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                                await message.answer('‚ùå '+_('–í–∞—à–∞ –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!', lang))
                        else: # –∏–Ω–∞—á–µ –¥–µ–ª–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
                            if await db.select_folder(message.from_user.id, path_folder): # –µ—Å–ª–∏ –ø–∞–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–¥, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                                await message.answer('‚ùå '+_('–í—ã —É–∂–µ –¥–æ–±–∞–≤–ª—è–ª–∏ —ç—Ç—É –ø–∞–ø–∫—É!', lang))
                            else: # –∏–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
                                if await yd.check_folder(path_folder, yatoken): # –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ø–∞–ø–∫–∏
                                    try:
                                        await db.insert_YaFolder(message.from_user.id, yatoken, path_folder) # –¥–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É –≤ –±–¥
                                        await message.answer('‚úÖ '+_('–ü—É—Ç—å –∫ –≤–∞—à–µ–π –ø–∞–ø–∫–µ <b><code>{}</code></b> –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!', lang).format(path_folder), parse_mode='HTML') # –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —Å—É–ø–µ—à–Ω–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏
                                    except KeyError: # –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞, —Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ—ë
                                        await message.answer('‚ùå '+_('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, –µ—Å–ª–∏ —Ç–∞–∫–æ–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.', lang))
                                        await message.answer('‚õîÔ∏è '+f'<code>{KeyError}</code>', parse_mode='HTML')
                                else: # –∏–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                                    await message.answer('‚ùå '+_('–í–∞—à–∞ –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!', lang))
                else: # –µ—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ –≤–∞–ª–∏–¥–µ–Ω, –≤—ã–≤–æ–¥–∏–º –æ–± —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await message.answer('‚ùå '+_('–í–∞—à —Ç–æ–∫–µ–Ω –Ω–µ –≤–∞–ª–∏–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ —Å–Ω–æ–≤–∞ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π', lang))
        else: # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∞–≤, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.reply('‚ùå '+_('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π, —Ç–∞–∫ –∫–∞–∫ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º!', lang))
    else: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–¥, —Ç–æ –ø—Ä–æ—Å–∏–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await message.answer('üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

@dp.message_handler(commands=['del_folder'])
async def delete_folder(message: types.Message): # —É–¥–∞–ª–µ–Ω–∏–µ –ø–∞–ø–∫–∏ –∏–∑ –±–¥
    if await db.user_exists(message.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        lang = (await db.get_lang(message.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (await db.get_status(message.from_user.id))[0] == '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä': # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
            data = message.text # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            dt = data.split() # —Ä–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç
            if len(dt) == 1: # –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
                await message.answer('‚ùå '+_('–í—ã –Ω–µ –≤–≤–µ–ª–∏ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ.', lang))
            else: # –∏–Ω–∞—á–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
                path_folder = data[12:] # –¥–µ–ª–∞–µ–º —Å—Ä–µ–∑, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å
                if path_folder[-1] == '/':  # –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–æ–π –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª
                    pass
                else:  # –µ—Å–ª–∏ –Ω–µ /, —Ç–æ —Å—Ç–∞–≤–∏–º
                    path_folder = path_folder + '/'
                check_folder = await db.select_folder(message.from_user.id, path_folder) # –∏—â–µ–º –ø–∞–ø–∫—É –≤ –±–¥
                if check_folder is None: # –µ—Å–ª–∏ –ø–∞–ø–∫–∏ –Ω–µ—Ç, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
                    await message.answer('‚ùå '+_('–í–∞—à–∞ –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!', lang))
                else: # –∏–Ω–∞—á–µ —É–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É
                    try:
                        await db.delete_folder(message.from_user.id, path_folder) # —É–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É
                        await message.answer('‚úÖ '+_('–î–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞ –±–æ–ª—å—à–µ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è', lang)) # –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    except KeyError: # –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ—ë
                        await message.answer('‚ùå '+_('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, –µ—Å–ª–∏ —Ç–∞–∫–æ–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π.', lang))
                        await message.answer('‚õîÔ∏è '+f'<code>{KeyError}</code>', parse_mode='HTML')
        else: # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∞–≤, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.reply('‚ùå '+_('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π, —Ç–∞–∫ –∫–∞–∫ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º!', lang))
    else: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–¥, —Ç–æ –ø—Ä–æ—Å–∏–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await message.answer('üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

@dp.message_handler(commands=['folders'])
async def delete_folder(message: types.Message): # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –ø–∞–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if await db.user_exists(message.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        lang = (await db.get_lang(message.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫
        if (await db.get_status(message.from_user.id))[0] == '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä': # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∞
            folders = (await db.select_folders(message.from_user.id)) # –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–∞–ø–∫–∏
            if len(folders) < 1: # –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                await message.answer('üîï '+_('–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø–∞–ø–æ–∫.', lang))
            else: # –∏–Ω–∞—á–µ –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫
                tx = []
                for i in folders:
                    tx.append(i[0])
                t = "\n".join(map(str, tx))
                text = 'üìö '+_('–í–æ—Ç –≤—Å–µ –≤–∞—à–∏ –ø–∞–ø–∫–∏:\n\n<b><code>{}</code></b>\n\n–£–¥–∞–ª–∏—Ç—å –∏—Ö –º–æ–∂–Ω–æ –≤–≤–µ–¥—è –∫–æ–º–∞–Ω–¥—É <code>/del_folder [–ø–∞–ø–∫–∞]</code>', lang).format(t)
                await message.answer(text, parse_mode='HTML')
        else:  # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∞–≤, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.reply('‚ùå ' + _('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π, —Ç–∞–∫ –∫–∞–∫ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º!', lang))
    else:  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–¥, —Ç–æ –ø—Ä–æ—Å–∏–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await message.answer('üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

@dp.message_handler(commands=['help'])
async def help(message: types.Message): # help - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–∞–ø–æ–∫ ( –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å )
    if await db.user_exists(message.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        text = '‚ÑπÔ∏è '+'–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–∞–ø–∫—É –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É, –∫–∞–∫ —É–∫–∞–∑–∞–Ω–æ –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö:\n<b>/add_folder /my_folder/</b>\n<b>/add_folder /–ó–∞–≥—Ä—É–∑–∫–∏/my_folder1/my_folder2/\n/add_folder /–û–±—â–∏–π –¥–æ—Å—Ç—É–ø/my_folder/</b>\n\n–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –±–æ—Ç –∏—â–µ—Ç –Ω—É–∂–Ω—É—é –≤–∞–º –ø–∞–ø–∫—É –≤–æ –≤–∫–ª–∞–¥–∫–µ <b>"–§–∞–π–ª—ã"</b>'
        await message.answer(text, parse_mode='HTML')
    else: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–¥, –ø—Ä–æ—Å–∏–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await message.answer('üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

@dp.message_handler(commands=['token'])
async def info_token(message: types.Message): # –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ –µ–≥–æ –∑–∞–≥—Ä—É–∑–∫–∞
    if await db.user_exists(message.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        lang = (await db.get_lang(message.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫
        if (await db.get_status(message.from_user.id))[0] == '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä': # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
            data = message.text
            dt = data.split()
            if len(dt) == 1: # –µ—Å–ª–∏ –Ω–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –≤—ã–≤–æ–¥–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
                await message.reply(
                    '‚ÑπÔ∏è'+_("–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –≤–∞–º –Ω–∞–¥–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–µ—Å–ª–æ–∂–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.\n\n–ù–∏–∂–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–æ –≤—Å—ë –ø–æ –ø—É–Ω–∫—Ç–∞–º.", lang),
                    parse_mode='HTML')
                await bot.send_photo(chat_id=message.from_user.id, photo=InputFile("imgs/primer_photo_1.png"),
                                     caption=_("1. –ó–∞–π—Ç–∏ –Ω–∞ <a href='https://oauth.yandex.ru/client/new'>—Å–∞–π—Ç</a> —è–Ω–¥–µ–∫—Å–∞ –∏ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–¥—É–º–∞—Ç—å –ª—é–±–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≥–∞–ª–æ—á–∫—É <b><u>–í–µ–±-—Å–µ—Ä–≤–∏—Å—ã</u></b> –∏ –≤—Å—Ç–∞–≤–∏—Ç—å —ç—Ç—É —Å—Å—ã–ª–∫—É: <b><code>https://oauth.yandex.ru/verification_code</code></b>", lang),
                                     parse_mode='HTML')
                await asyncio.sleep(0.5)
                await bot.send_photo(chat_id=message.from_user.id, photo=InputFile("imgs/primer_photo_2.png"),
                                     caption=_("2. –ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∫–∞–∫ –Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ.", lang), parse_mode='HTML')
                await asyncio.sleep(0.5)
                await bot.send_photo(chat_id=message.from_user.id, photo=InputFile("imgs/primer_photo_3.png"),
                                     caption=_("3. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à <b><u>Client ID</u></b>, –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /client_id [–≤–∞—à client id]\n\n–ù–∞–ø—Ä–∏–º–µ—Ä:\n<b>/client_id 80baa4fdjk4j54ff45gdba37</b>", lang),
                                     parse_mode='HTML')
                await asyncio.sleep(0.5)
                await bot.send_photo(chat_id=message.from_user.id, photo=InputFile("imgs/primer_photo_4.png"),
                                     caption=_("4. –î–∞–ª–µ–µ –∫–æ–ø–∏—Ä—É–µ–º –≤–∞—à <b><u>Token</u></b> –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–æ—Ç—É –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–º–∞–Ω–¥—ã /token [–≤–∞—à token]\n\n–ù–∞–ø—Ä–∏–º–µ—Ä:\n<b>/token y0_AgAAAAAy60ZURNGEUIINM545NvFTICdggmle22U-cDkOwI</b>", lang),
                                     parse_mode='HTML')

            elif len(dt) == 2: # –µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ 2, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
                token = data[7:] # –¥–µ–ª–∞–µ–º —Å—Ä–µ–∑, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
                db_token = (await db.get_yatoken(message.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–¥
                if str(token) != str(db_token): # –µ—Å–ª–∏ –æ–Ω–∏ —Ä–∞–∑–Ω—ã–µ, —Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
                    answer = await yd.check_token(token) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
                    if answer is False: # –µ—Å–ª–∏ –æ—à–∏–±–∫–∞, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        await message.reply('‚ùå '+_('–í–∞—à —Ç–æ–∫–µ–Ω –Ω–µ –≤–∞–ª–∏–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ —Å–Ω–æ–≤–∞ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π', lang))
                    else: # –∏–Ω–∞—á–µ –≤—ã–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –≤ –±–¥ –∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                        await db.update_token(message.from_user.id, token)
                        await message.answer('‚úÖ '+_('–í–∞—à —Ç–æ–∫–µ–Ω –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω, –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Ä–∞–±–æ—Ç–µ.', lang))
                else: # –∏–Ω–∞—á–µ –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
                    await message.answer('üì• '+_('–≠—Ç–æ—Ç —Ç–æ–∫–µ–Ω —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.', lang))
            else: # –∏–Ω–∞—á–µ –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
                await message.answer('‚ùå '+_('–í—ã –≤–≤–µ–ª–∏ –±–æ–ª–µ–µ 1 –∞—Ä–≥—É–º–µ–Ω—Ç–∞!', lang))
        else: # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∞–≤, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.reply('‚ùå '+_('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π, —Ç–∞–∫ –∫–∞–∫ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º!', lang))
    else: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–¥, –ø—Ä–æ—Å–∏–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await message.answer('üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

@dp.message_handler(commands=['check'])
async def check_yandex_token(message: types.Message): # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
    if await db.user_exists(message.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        lang = (await db.get_lang(message.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫
        if (await db.get_status(message.from_user.id))[0] == '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä': # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∞
            yatoken = (await db.get_yatoken(message.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –±–¥
            answer = await yd.check_token(yatoken) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
            if answer is False: # –Ω–µ –≤–∞–ª–∏–¥–µ–Ω - –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
                await message.reply('‚ùå '+_('–í–∞—à —Ç–æ–∫–µ–Ω –Ω–µ –≤–∞–ª–∏–¥–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ —Å–Ω–æ–≤–∞ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π', lang))
            else: # –≤–∞–ª–∏–¥–µ–Ω - –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                await message.reply('‚úÖ '+_('–° –≤–∞—à–∏–º —Ç–æ–∫–µ–Ω–æ–º –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ!', lang))
        else: # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∞–≤, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.reply('‚ùå '+_('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π, —Ç–∞–∫ –∫–∞–∫ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º!', lang))
    else: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–¥, –ø—Ä–æ—Å–∏–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await message.answer('üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

@dp.message_handler(commands=['client_id'])
async def info_token(message: types.Message): # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ token —á–µ—Ä–µ–∑ client id
    if await db.user_exists(message.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        lang = (await db.get_lang(message.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫
        if (await db.get_status(message.from_user.id))[0] == '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä': # –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
            data = message.text # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            client_id = data[11:] # –¥–µ–ª–∞–µ–º —Å—Ä–µ–∑
            if len(client_id) > 0: # –µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –±–æ–ª—å—à–µ 1, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å—Å—ã–ª–∫—É
                await message.reply('üåê '+_('<a href="https://oauth.yandex.ru/authorize?response_type=token&client_id={}">–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ</a>', lang).format(client_id), parse_mode='HTML')
            else: # –∏–Ω–∞—á–µ –≤—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É
                await message.reply('‚ùå '+_('–£–∫–∞–∂–∏—Ç–µ –≤–∞—à client_id!', lang))
        else: # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–∞–≤, –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.reply('‚ùå '+_('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π, —Ç–∞–∫ –∫–∞–∫ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º!', lang))
    else: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–¥, –ø—Ä–æ—Å–∏–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await message.answer('üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

async def settings(message: types.Message): # –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —è–∑—ã–∫–∞
    if await db.user_exists(message.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        lang = (await db.get_lang(message.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫
        await message.answer('‚ôªÔ∏è '+_('–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫', lang), reply_markup=nav.choose_lang()) # –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
    else: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–¥, –ø—Ä–æ—Å–∏–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await message.answer('üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

@dp.callback_query_handler(text_contains="delete_account")
async def DeleteAccount(callback: types.CallbackQuery): # —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–æ—á–Ω–æ –ª–∏ –æ–Ω —Ö–æ—á–µ—Ç —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
    if await db.user_exists(callback.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        await bot.delete_message(callback.from_user.id, callback.message.message_id) # —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        lang = (await db.get_lang(callback.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫
        await bot.send_message(callback.from_user.id, 'üóë '+_('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç?', lang), reply_markup=nav.delete_account(lang)) # —É—Ç–æ—á–Ω—è–µ–º
    else: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–¥, –ø—Ä–æ—Å–∏–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await bot.send_message(callback.from_user.id, 'üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

@dp.callback_query_handler(text_contains="delet_acc_")
async def DeleteAccountCheck(callback: types.CallbackQuery): # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
    if await db.user_exists(callback.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        lang = (await db.get_lang(callback.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫
        await bot.delete_message(callback.from_user.id, callback.message.message_id) # —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        data = callback.data # –ø–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É
        answer = data[10:] # –¥–µ–ª–∞–µ–º —Å—Ä–µ–∑, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ—Ç–≤–µ—Ç
        if answer == 'yes': # –µ—Å–ª–∏ –¥–∞, —Ç–æ —É–¥–∞–ª—è–µ–º –∞–∫–∫–∞—É–Ω—Ç –∏ –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ
            await db.delete_accaunt(callback.from_user.id) # —É–¥–∞–ª—è–µ–º –∞–∫–∫–∞—É–Ω—Ç
            await db.delete_all_folders(callback.from_user.id) # —É–¥–∞–ª—è–µ–º –≤—Å–µ –ø–∞–ø–∫–∏
            await db.delete_all_files(callback.from_user.id) # —É–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
            await db.delete_reff_for_users(callback.from_user.id) # —É–¥–∞–ª—è–µ–º —É –≤—Å–µ—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É
            await bot.send_message(callback.from_user.id, '‚úÖ '+_('–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!', lang)) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    else: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–¥, –ø—Ä–æ—Å–∏–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await bot.send_message(callback.from_user.id, 'üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')


@dp.callback_query_handler(text_contains="status_")
async def setStatus(callback: types.CallbackQuery): # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–¥–∞—á–∏ —Å—Ç–∞—Ç—É—Å–∞
    if await db.user_exists(callback.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        lang = (await db.get_lang(callback.from_user.id))[0] # –ø–æ–ª—É—á–∞–µ–º —è–∑—ã–∫
        await bot.delete_message(callback.from_user.id, callback.message.message_id) # —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        data = callback.data # –ø–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É
        status = data[7:] # –¥–µ–ª–∞–µ–º —Å—Ä–µ–∑
        if status == 'organizer' or status == 'Organizer': # –∑–∞–º–µ–Ω—è–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–∏–π
            status = '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä'
        elif status == 'participant' or status == 'Participant': # –∑–∞–º–µ–Ω—è–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–∏–π
            status = '–£—á–∞—Å—Ç–Ω–∏–∫'
        await db.update_status(callback.from_user.id, status) # –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        await bot.send_message(callback.from_user.id, '‚úÖ '+_('–í–∞—à —Å—Ç–∞—Ç—É—Å –±—ã–ª –æ–±–Ω–æ–≤–ª—ë–Ω!', lang)) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    else: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–¥, –ø—Ä–æ—Å–∏–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await bot.send_message(callback.from_user.id, 'üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

@dp.callback_query_handler(text_contains="lang_")
async def setLanguage(callback: types.CallbackQuery): # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏–ª–∏ —Å–º–µ–Ω—É —è–∑—ã–∫–∞
        await bot.delete_message(callback.from_user.id, callback.message.message_id) # —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        data = callback.data # –ø–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É
        dt = data[5:] # –¥–µ–ª–∞–µ–º —Å—Ä–µ–∑
        if len(dt) == 3: # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–¥ —è–∑—ã–∫–∞
            lang = dt.strip() # —É–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
            refferer_id = "" # –æ—Å—Ç–∞–≤–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –ø—É—Å—Ç—ã–º
        else: # –∏–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –∏ –ø–∏—à–µ–º –∫–æ–¥ —è–∑—ã–∫–∞
            refferer_id = dt[3:] # —Ä–µ—Ñ–µ—Ä–∞–ª
            lang = dt[0:2] # –∫–æ–¥ —è–∑—ã–∫–∞

        if not await db.user_exists(callback.from_user.id):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —á–µ–ª–æ–≤–µ–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            r_id = None # –ø–æ –¥–µ—Ñ–æ–ª—Ç—É None
            username = callback.from_user.username # –ø–æ–ª—É—á–∞–µ–º username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if str(refferer_id) != "": # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É
                if str(refferer_id) == str(callback.from_user.id): # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é —Ä–µ—Ñ–µ—Ä–∞–ª–∫—É
                    await db.add_user(callback.from_user.id, lang, r_id, username) # –¥–æ–±–∞–≤–ª—è–µ–º –≤ –±–¥
                    await bot.send_message(callback.from_user.id, '‚úÖ '+_('–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!', lang), reply_markup=nav.MainMenu(lang)) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                else:
                    await db.add_user(callback.from_user.id, lang, refferer_id, username) # –¥–æ–±–∞–≤–ª—è–µ–º –≤ –±–¥
                    await bot.send_message(callback.from_user.id, '‚úÖ '+_('–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!', lang), reply_markup=nav.MainMenu(lang)) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await bot.send_message(refferer_id, 'üÜï '+_('–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', lang)+f': @{username}') # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª
            else: # –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –Ω–µ —Ä–µ—Ñ–µ—Ä–∞–ª, —Ç–æ —Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º –∏–Ω–∞—á–µ
                await db.add_user(callback.from_user.id, lang, r_id, username) # –¥–æ–±–∞–≤–ª—è–µ–º –≤ –±–¥
                await bot.send_message(callback.from_user.id, '‚úÖ '+_('–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!', lang), reply_markup=nav.MainMenu(lang)) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        else:
            old_lang = await db.get_lang(callback.from_user.id) # –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ä—ã–π —è–∑—ã–∫
            if lang != old_lang[0]: #  –µ—Å–ª –æ–Ω–∏ –Ω–µ —Ä–∞–≤–Ω—ã
                await db.update_lang(callback.from_user.id, lang) # –º–µ–Ω—è–µ–º —è–∑—ã–∫
                await bot.send_message(callback.from_user.id, '‚úÖ '+_('–Ø–∑—ã–∫ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!', lang),reply_markup=nav.MainMenu(lang)) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            else: #  –∏–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                await bot.send_message(callback.from_user.id, 'üì• '+_('–í—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!', lang), reply_markup=nav.MainMenu(lang)) # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

@dp.message_handler()
async def redirection(message: types.Message): # –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è
    if await db.user_exists(message.from_user.id): # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        profile_ = ['üë§ –ü—Ä–æ—Ñ–∏–ª—å', 'üë§ –ø—Ä–æ—Ñ–∏–ª—å', '–ü—Ä–æ—Ñ–∏–ª—å', '–ø—Ä–æ—Ñ–∏–ª—å', 'üë§ Profile', 'üë§ profile', 'Profile', 'profile']
        settings_ = ['‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', '‚öôÔ∏è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏', '‚öôÔ∏è Settings', '‚öôÔ∏è settings', 'Settings', 'settings']
        if message.text in profile_:
            await user_profile(message)
        if message.text in settings_:
            await settings(message)
    else: # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–¥, –ø—Ä–æ—Å–∏–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        await message.answer('üìÉ –ü–æ–∂–∞–ª—É–π—Å—Ç–≤–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start')

# –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__': # –∑–∞–ø—É—Å–∫ –ø—Ä–æ–µ–∫—Ç–∞
    print('Bot is ready!')
    executor.start_polling(dp, on_startup=on_startup, skip_updates=True) # –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
